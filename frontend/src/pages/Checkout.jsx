import React, { useState, useEffect, useContext } from 'react';
import { useNavigate } from 'react-router-dom';
import { toast } from 'react-toastify';
import Context from '../context';
import SummaryApi from '../common';
import displayCurrency from '../helpers/displayCurrency';
import { getAuthToken } from "../utils/auth";

const Checkout = () => {
  const [cartItems, setCartItems] = useState([]);
  const [loading, setLoading] = useState(true);
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [address, setAddress] = useState({
    houseNumber: '',
    alley: '',
    road: '',
    district: '',
    subDistrict: '',
    province: '',
    postalCode: ''
  });
  const [contactNumber, setContactNumber] = useState('');
  const [additionalDetails, setAdditionalDetails] = useState('');
  const navigate = useNavigate();
  const { fetchUserAddToCart } = useContext(Context);

  const token = getAuthToken();

  useEffect(() => {
    fetchCartItems();
  }, []);

  const fetchCartItems = async () => {
    try {
      const response = await fetch(SummaryApi.addToCartProductView.url, {
        method: SummaryApi.addToCartProductView.method,
        credentials: 'include',
        headers: {
          "content-type": 'application/json',
          "Authorization": `Bearer ${token}`
        },
      });
      const responseData = await response.json();
      if (responseData.success) {
        setCartItems(responseData.data);
      }
      setLoading(false);
    } catch (error) {
      console.error('Error fetching cart items:', error);
      setLoading(false);
    }
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsSubmitting(true);
  
    try {
      const formData = new FormData();
      formData.append('items', JSON.stringify(cartItems.map(item => ({
        productId: item.productId._id,
        quantity: item.quantity,
        price: item.productId.price
      }))));
      formData.append('address', JSON.stringify(address));
      formData.append('contactNumber', contactNumber);
      formData.append('additionalDetails', additionalDetails);
  
      console.log('Sending order data:', Object.fromEntries(formData));
  
      const response = await fetch(SummaryApi.createOrder.url, {
        method: 'POST',
        credentials: 'include',
        body: formData,
        headers: {
          "Authorization": `Bearer ${token}`
        },
      });
  
      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.message || 'Failed to place order');
      }
  
      const data = await response.json();
      toast.success('‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
      fetchUserAddToCart();
      navigate('/order-confirmation', { state: { orderId: data.orderId } });
    } catch (error) {
      console.error('‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
      toast.error(error.message || 'An error occurred while placing the order');
    } finally {
      setIsSubmitting(false); 
    }
  };

  const handleAddressChange = (e) => {
    setAddress({ ...address, [e.target.name]: e.target.value });
  };

  if (loading) {
    return (
      <div className="flex justify-center items-center h-screen">
        <div className="animate-spin rounded-full h-32 w-32 border-t-2 border-b-2 border-gray-900"></div>
      </div>
    );
  }

  const totalPrice = cartItems.reduce((total, item) => 
    total + (item.productId?.price || 0) * item.quantity, 0);

  return (
    <div className="container mx-auto p-6">
      <h1 className="text-4xl font-bold text-center mb-10 text-gray-800">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</h1>
      <form onSubmit={handleSubmit} className="bg-white shadow-xl rounded-lg p-8 md:p-12 max-w-2xl mx-auto space-y-8">
        <div>
          <h2 className="text-2xl font-semibold mb-6 text-gray-700">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</h2>
          <div className="space-y-4">
            {cartItems.map((item) => (
              <div key={item._id} className="flex justify-between items-center bg-gray-50 p-4 rounded-md shadow-sm">
                <div className="flex items-center gap-4">
                  <img
                    src={item.productId?.productImage?.[0]}
                    alt={item.productId?.productName}
                    className="w-16 h-16 object-cover rounded"
                  />
                  <span className="text-gray-600">{item.productId?.productName} x {item.quantity}</span>
                </div>
                <span className="text-gray-800 font-medium">{displayCurrency((item.productId?.price || 0) * item.quantity)}</span>
              </div>
            ))}
            <div className="text-xl font-bold text-right mt-4">
              ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°: {displayCurrency(totalPrice)}
            </div>
          </div>
        </div>

        <div>
          <h2 className="text-xl font-semibold text-gray-700 mb-4">‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label className="block text-gray-600 mb-2">‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà</label>
              <input
                type="text"
                name="houseNumber"
                className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                value={address.houseNumber}
                onChange={handleAddressChange}
                required
              />
            </div>
            <div>
              <label className="block text-gray-600 mb-2">‡∏ã‡∏≠‡∏¢</label>
              <input
                type="text"
                name="alley"
                className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                value={address.alley}
                onChange={handleAddressChange}
              />
            </div>
            <div>
              <label className="block text-gray-600 mb-2">‡∏ñ‡∏ô‡∏ô</label>
              <input
                type="text"
                name="road"
                className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                value={address.road}
                onChange={handleAddressChange}
              />
            </div>
            <div>
              <label className="block text-gray-600 mb-2">‡∏ï‡∏≥‡∏ö‡∏•</label>
              <input
                type="text"
                name="subDistrict"
                className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                value={address.subDistrict}
                onChange={handleAddressChange}
                required
              />
            </div>
            <div>
              <label className="block text-gray-600 mb-2">‡∏≠‡∏≥‡πÄ‡∏†‡∏≠</label>
              <input
                type="text"
                name="district"
                className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                value={address.district}
                onChange={handleAddressChange}
                required
              />
            </div>
            <div>
              <label className="block text-gray-600 mb-2">‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î</label>
              <input
                type="text"
                name="province"
                className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                value={address.province}
                onChange={handleAddressChange}
                required
              />
            </div>
            <div>
              <label className="block text-gray-600 mb-2">‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå</label>
              <input
                type="text"
                name="postalCode"
                className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                value={address.postalCode}
                onChange={handleAddressChange}
                required
              />
            </div>
          </div>
          <div className="mt-6 p-6 bg-blue-50 border border-blue-300 rounded-lg shadow-md">
            <p className="text-gray-800 font-medium leading-relaxed">
              üöö <strong>‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á:</strong> ‡∏ó‡∏≤‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏à‡∏∞‡∏Ñ‡∏¥‡∏î‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á (‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°‡∏™‡πà‡∏á‡∏ü‡∏£‡∏µ) <br />
              ‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏ó‡∏≤‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏à‡∏∞‡πÅ‡∏à‡πâ‡∏á‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏≤‡∏á‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ <br />
              ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÑ‡∏î‡πâ‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
            </p>
          </div>
        </div>

        <div>
          <label className="block text-gray-600 mb-2">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£</label>
          <input
            type="tel"
            className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
            value={contactNumber}
            onChange={(e) => setContactNumber(e.target.value)}
            required
          />
        </div>

        <div>
          <label className="block text-gray-600 mb-2">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</label>
          <textarea
            className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
            value={additionalDetails}
            onChange={(e) => setAdditionalDetails(e.target.value)}
            placeholder="Additional details (optional)"
          />
          <div className="mt-6 p-6 bg-green-50 border border-green-300 rounded-lg shadow-md">
            <p className="text-gray-800 font-medium leading-relaxed">
              üìù <strong>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°:</strong> ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏™‡πà‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° ‡πÄ‡∏ä‡πà‡∏ô <br />
              ‡∏™‡∏µ‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤, ‡∏ß‡∏±‡∏ô‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ô‡∏±‡∏î‡∏ß‡∏±‡∏ô‡∏™‡πà‡∏á‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏°‡∏§‡∏Å‡∏©‡πå‡∏¢‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏ü‡∏£‡∏µ) <br />
              ‡∏ó‡∏≤‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏à‡∏∞‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏û‡∏π‡∏î‡∏Ñ‡∏∏‡∏¢‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
            </p>
          </div>
        </div>

        <div className="mt-6 p-6 bg-yellow-50 border border-yellow-300 rounded-lg shadow-md">
          <p className="text-gray-800 font-medium leading-relaxed">
            üé® <strong>‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏±‡πà‡∏á‡∏ó‡∏≥:</strong> <br />
            ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏û‡∏π‡∏î‡∏Ñ‡∏∏‡∏¢‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î ‡∏™‡∏µ, ‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á, ‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á <br />
            ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏π‡∏•‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤, ‡∏Ñ‡πà‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤, ‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á, ‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ <br />
            ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡∏ó‡∏µ‡πà ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ <br />
            ‡∏ó‡∏≤‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏à‡∏±‡∏î‡∏ó‡∏≥‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ 5-6 ‡∏ß‡∏±‡∏ô ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏∂‡∏á‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
          </p>
        </div>

        <button
          type="submit"
          className="w-full bg-blue-600 text-white font-semibold py-3 rounded-md shadow-lg hover:bg-blue-700 transition duration-300"
          disabled={isSubmitting}
        >
          {isSubmitting ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠...' : '‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠'}
        </button>
      </form>
    </div>
  );
};

export default Checkout;
